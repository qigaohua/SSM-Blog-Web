<?xml version="1.0" encoding="UTF-8"?>  
<web-app id="WebApp_9" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"   
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"> 


  <display-name> SSM Blog </display-name>
  
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>
  	 classpath:spring-beans.xml,
  	 classpath:shiro-conf.xml
  	</param-value>
  </context-param>
      <!--
       DelegatingFilterProxy类是一个代理类，所有的请求都会首先发到这个filter代理
                     然后再按照"filter-name"委派到spring中的这个bean。
                     在Spring中配置的bean的name要和web.xml中的<filter-name>一样.
	   targetFilterLifecycle，是否由spring来管理bean的生命周期，设置为true有个好处，可以调用spring后续的bean
	-->
    <filter>  
	    <filter-name>shiroFilter</filter-name>  
	    <filter-class>  
	        org.springframework.web.filter.DelegatingFilterProxy  
	    </filter-class>  
 	     <init-param>  
	    <param-name>targetFilterLifecycle</param-name>  
	    <param-value>true</param-value>  
	    </init-param>  
   </filter>  
 
	<filter-mapping>  
	    <filter-name>shiroFilter</filter-name>  
	    <url-pattern>/*</url-pattern>  
	</filter-mapping>  
  
  
  
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <servlet>
  	<servlet-name>SpringMVC</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<init-param>
  		<param-name>contextConfigLocation</param-name>
  		<param-value>classpath:spring-mvc.xml</param-value>
  	</init-param>
  	<load-on-startup>1</load-on-startup>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>SpringMVC</servlet-name>
  	<url-pattern>/</url-pattern>
  </servlet-mapping>
<!--   <servlet-mapping>
  	<servlet-name>SpringMVC</servlet-name>
  	<url-pattern>*.html</url-pattern>
  </servlet-mapping>
 -->  
</web-app>
